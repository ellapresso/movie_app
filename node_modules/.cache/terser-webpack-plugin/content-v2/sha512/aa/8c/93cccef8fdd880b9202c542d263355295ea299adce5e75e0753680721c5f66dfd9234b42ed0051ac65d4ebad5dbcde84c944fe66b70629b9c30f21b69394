{"map":"{\"version\":3,\"sources\":[\"/Users/ellapresso/Desktop/javascript_study/reactjs_movie_app/src/Movie.js\",\"/Users/ellapresso/Desktop/javascript_study/reactjs_movie_app/src/App.js\",\"/Users/ellapresso/Desktop/javascript_study/reactjs_movie_app/src/serviceWorker.js\",\"/Users/ellapresso/Desktop/javascript_study/reactjs_movie_app/src/index.js\"],\"names\":[\"MoviePostar\",\"_ref2\",\"poster\",\"alt\",\"react_default\",\"a\",\"createElement\",\"src\",\"title\",\"className\",\"MovieGenre\",\"_ref3\",\"genres\",\"Movie\",\"_ref\",\"synopsis\",\"map\",\"index\",\"key\",\"lib_default\",\"text\",\"maxLine\",\"ellipsis\",\"trimRight\",\"basedOn\",\"App\",\"state\",\"_renderMovies\",\"_this\",\"movies\",\"src_Movie\",\"title_english\",\"medium_cover_image\",\"id\",\"_getMovies\",\"_callee\",\"regenerator_default\",\"wrap\",\"_context\",\"prev\",\"next\",\"_callApi\",\"sent\",\"setState\",\"stop\",\"this\",\"fetch\",\"then\",\"Response\",\"json\",\"data\",\"catch\",\"err\",\"console\",\"log\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"wUA+DA,SAASA,EAATC,GAAsC,IAAfC,EAAeD,EAAfC,OAAQC,EAAOF,EAAPE,IAC7B,OAAOC,EAAAC,EAAAC,cAAA,MAAA,CAAKC,IAAKL,EAAQC,IAAKA,EAAKK,MAAOL,EAAKM,UAAU,iBAG3D,SAASC,EAATC,GAAgC,IAAVC,EAAUD,EAAVC,OACpB,OAAOR,EAAAC,EAAAC,cAAA,OAAA,CAAMG,UAAU,eAAeG,GAmBzBC,IAAAA,EA7Df,SAAAC,GAAoD,IAAnCN,EAAmCM,EAAnCN,MAAON,EAA4BY,EAA5BZ,OAAQU,EAAoBE,EAApBF,OAAQG,EAAYD,EAAZC,SACtC,OACEX,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,SACbL,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAACN,EAAD,CAAaE,OAAQA,EAAQC,IAAKK,KAEpCJ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,KAAA,KAAKE,GACLJ,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,gBACZG,EAAOI,IAAI,SAACJ,EAAQK,GAAT,OACVb,EAAAC,EAAAC,cAACI,EAAD,CAAYE,OAAQA,EAAQM,IAAKD,OAGrCb,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CACEe,KAAML,EACNM,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,eCMHC,6MA7CbC,MAAQ,KAMRC,cAAgB,WAYd,OAXeC,EAAKF,MAAMG,OAAOb,IAAI,SAACa,EAAQZ,GAC5C,OACEb,EAAAC,EAAAC,cAACwB,EAAD,CACEtB,MAAOqB,EAAOE,cACd7B,OAAQ2B,EAAOG,mBACfd,IAAKW,EAAOI,GACZrB,OAAQiB,EAAOjB,OACfG,SAAUc,EAAOd,gBAOzBmB,gCAAa,SAAAC,IAAA,IAAAN,EAAA,OAAAO,EAAA/B,EAAAgC,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACUZ,EAAKa,WADf,KAAA,EACLZ,EADKS,EAAAI,KAEXd,EAAKe,SAAS,CACZd,OAAAA,IAHS,KAAA,EAAA,IAAA,MAAA,OAAAS,EAAAM,SAAAT,EAAAU,WAObJ,SAAW,WACT,OAAOK,MAAM,6DACVC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKrB,SACvBsB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,yFA7B5BP,KAAKX,8CAgCE,IACCL,EAAWgB,KAAKnB,MAAhBG,OACR,OACEzB,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAWoB,EAAS,MAAQ,gBAC9BA,EAASgB,KAAKlB,gBAAkB,kBAxCvB4B,EAAAA,WCQEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC\",\"sourcesContent\":[\"import React, { Component } from \\\"react\\\";\\nimport LinesEllipsis from \\\"react-lines-ellipsis\\\";\\nimport PropTypes from \\\"prop-types\\\";\\nimport \\\"./Movie.css\\\";\\n\\n// class Movie extends Component {\\n//   static propTypes = {\\n//     title: PropTypes.string.isRequired,\\n//     poster: PropTypes.string.isRequired\\n//   };\\n\\n//   render() {\\n//     // console.log(this.props);\\n//     return (\\n//       <div className=\\\"Movie\\\">\\n//         <div className=\\\"Movie_columns\\\">\\n//           <MoviePostar poster={this.props.poster} />\\n//         </div>\\n//         <div className=\\\"Movie_columns\\\">\\n//           <h1>{this.props.title}</h1>\\n//         </div>\\n//       </div>\\n//     );\\n//   }\\n// }\\n\\nfunction Movie({ title, poster, genres, synopsis }) {\\n  return (\\n    <div className=\\\"Movie\\\">\\n      <div className=\\\"Movie_Columns\\\">\\n        <MoviePostar poster={poster} alt={title} />\\n      </div>\\n      <div className=\\\"Movie_Columns\\\">\\n        <h1>{title}</h1>\\n        <div className=\\\"Movie_Genres\\\">\\n          {genres.map((genres, index) => (\\n            <MovieGenre genres={genres} key={index} />\\n          ))}\\n        </div>\\n        <LinesEllipsis\\n          text={synopsis}\\n          maxLine=\\\"3\\\"\\n          ellipsis=\\\"...\\\"\\n          trimRight\\n          basedOn=\\\"letters\\\"\\n        />\\n        {/* <p className=\\\"Movie_Synopsis\\\">{synopsis}</p> */}\\n      </div>\\n    </div>\\n  );\\n}\\n\\n// class MoviePostar extends Component {\\n//   static propTypes = {\\n//     poster: PropTypes.string.isRequired\\n//   };\\n//   render() {\\n//     // console.log(this.props);\\n//     return <img src={this.props.poster} />;\\n//   }\\n// }\\n\\n//위와 같은 코드. state가 없고 리턴만 있음.\\nfunction MoviePostar({ poster, alt }) {\\n  return <img src={poster} alt={alt} title={alt} className=\\\"Movie_Poster\\\" />;\\n}\\n\\nfunction MovieGenre({ genres }) {\\n  return <span className=\\\"Movie_Genre\\\">{genres}</span>;\\n}\\n\\nMovie.propTypes = {\\n  title: PropTypes.string.isRequired,\\n  poster: PropTypes.string.isRequired,\\n  genres: PropTypes.string.isRequired,\\n  synopsis: PropTypes.string.isRequired\\n};\\n\\nMoviePostar.propTypes = {\\n  poster: PropTypes.string.isRequired,\\n  alt: PropTypes.string.isRequired\\n};\\n\\nMovieGenre.propTypes = {\\n  genres: PropTypes.string.isRequired\\n};\\n\\nexport default Movie;\\n\",\"import React, { Component } from \\\"react\\\";\\nimport \\\"./App.css\\\";\\nimport Movie from \\\"./Movie\\\";\\n\\nclass App extends Component {\\n  state = {};\\n  componentDidMount() {\\n    //많은 함수를 부를것이기 때문에 이곳에 몰아넣는것은 좋지 못함. 그래서 나눠서 함수를 만듦.\\n    this._getMovies();\\n  }\\n\\n  _renderMovies = () => {\\n    const movies = this.state.movies.map((movies, index) => {\\n      return (\\n        <Movie\\n          title={movies.title_english}\\n          poster={movies.medium_cover_image}\\n          key={movies.id} //인덱스를 사용하면 너무 느려질수 있음.\\n          genres={movies.genres}\\n          synopsis={movies.synopsis}\\n        /> //컴포넌트가 많으면 유니크한 키값이 필요\\n      );\\n    });\\n    return movies; //movies 에 데이터를 저장함.\\n  };\\n\\n  _getMovies = async () => {\\n    const movies = await this._callApi();\\n    this.setState({\\n      movies //movies : movies  => 같기 때문에 한번만 써줌.\\n    });\\n  };\\n\\n  _callApi = () => {\\n    return fetch(\\\"https://yts.am/api/v2/list_movies.json?sort_by=like_conut\\\")\\n      .then(Response => Response.json()) //위 페치가 끝나면 실행 (function을 넣음, 1 attribute)\\n      .then(json => json.data.movies) // '=>' 화살표에 리턴이 포함되어있음.\\n      .catch(err => console.log(err)); //에러가 있으면 잡아\\n  };\\n\\n  render() {\\n    const { movies } = this.state;\\n    return (\\n      <div className={movies ? \\\"App\\\" : \\\"App--loading\\\"}>\\n        {movies ? this._renderMovies() : \\\"Loading\\\"}\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport \\\"./index.css\\\";\\nimport App from \\\"./App\\\";\\nimport * as serviceWorker from \\\"./serviceWorker\\\";\\n\\nReactDOM.render(<App />, document.getElementById(\\\"root\\\"));\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{11:function(e,t,n){e.exports=n(24)},17:function(e,t,n){},20:function(e,t,n){},23:function(e,t,n){},24:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),o=n(3),i=n.n(o),s=(n(17),n(1)),c=n.n(s),l=n(4),u=n(5),m=n(6),v=n(9),p=n(7),d=n(10),f=(n(20),n(8)),h=n.n(f);n(23);function g(e){var t=e.poster,n=e.alt;return r.a.createElement(\"img\",{src:t,alt:n,title:n,className:\"Movie_Poster\"})}function _(e){var t=e.genres;return r.a.createElement(\"span\",{className:\"Movie_Genre\"},t)}var w=function(e){var t=e.title,n=e.poster,a=e.genres,o=e.synopsis;return r.a.createElement(\"div\",{className:\"Movie\"},r.a.createElement(\"div\",{className:\"Movie_Columns\"},r.a.createElement(g,{poster:n,alt:t})),r.a.createElement(\"div\",{className:\"Movie_Columns\"},r.a.createElement(\"h1\",null,t),r.a.createElement(\"div\",{className:\"Movie_Genres\"},a.map(function(e,t){return r.a.createElement(_,{genres:e,key:t})})),r.a.createElement(h.a,{text:o,maxLine:\"3\",ellipsis:\"...\",trimRight:!0,basedOn:\"letters\"})))},E=function(e){function t(){var e,n;Object(u.a)(this,t);for(var a=arguments.length,o=new Array(a),i=0;i<a;i++)o[i]=arguments[i];return(n=Object(v.a)(this,(e=Object(p.a)(t)).call.apply(e,[this].concat(o)))).state={},n._renderMovies=function(){return n.state.movies.map(function(e,t){return r.a.createElement(w,{title:e.title_english,poster:e.medium_cover_image,key:e.id,genres:e.genres,synopsis:e.synopsis})})},n._getMovies=Object(l.a)(c.a.mark(function e(){var t;return c.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,n._callApi();case 2:t=e.sent,n.setState({movies:t});case 4:case\"end\":return e.stop()}},e,this)})),n._callApi=function(){return fetch(\"https://yts.am/api/v2/list_movies.json?sort_by=like_conut\").then(function(e){return e.json()}).then(function(e){return e.data.movies}).catch(function(e){return console.log(e)})},n}return Object(d.a)(t,e),Object(m.a)(t,[{key:\"componentDidMount\",value:function(){this._getMovies()}},{key:\"render\",value:function(){var e=this.state.movies;return r.a.createElement(\"div\",{className:e?\"App\":\"App--loading\"},e?this._renderMovies():\"Loading\")}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(r.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[11,1,2]]]);","extractedComments":[]}